#!/usr/bin/env sh

####################################################################################
#
#   Run this file from the root of the repository to build and run a PWA container
#
####################################################################################

main () {
  message "Adding environment variables to .env for docker setup."
  ENVFILE=./.env
  cp ./docker/.env.docker $ENVFILE 
  . $ENVFILE

  DOMAIN=$PWA_STUDIO_PUBLIC_PATH
  STATUS=0

  message "Creating SSL/TLS cert"
  # make docker/certs folder if one does not already exist
  [ -d ./docker/certs ] || mkdir ./docker/certs
  # install devcert dependency
  cd ./docker && yarn install && cd -
  node ./docker/makeHostAndCert $DOMAIN || STATUS=$?

  # By this point in the setup the host file should have the $DOMAIN and the certificate should be created and trusted
  if [ "$STATUS" == 0 ]; then
    start_docker
  else
    message "An error occurred during setup."
    exit 1
  fi
}

start_docker () {
  message "Clearing any running containers"
  docker-compose down

  message "Building PWA image"
  BUILD_STATUS=0
  docker-compose build || BUILD_STATUS=$?

  # clean up the environment in the background
  clean_up_env &
  
  if [ "$BUILD_STATUS" == 0 ]; then
    message "Starting Docker network and containers"
    docker-compose up
  else
    message "Build failed. See output for details."
  fi
}

clean_up_env () {
  # the docker-compose command needs the .env file to be present in order to run
  # but we want to remove it after execution so it doesn't pollute the user's environment 
  # when they switch to other branches or do not want to use the docker environment anymore
  if [ -f .env ]; then
    sleep 20
    rm .env
  fi
}

message () {
  echo ""
  echo "==========================================================================="
  echo ""
  echo -e "        " "$1"
  echo ""
  echo "==========================================================================="
  echo ""
}

main 
